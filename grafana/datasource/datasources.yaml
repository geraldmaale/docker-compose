# Copyright The OpenTelemetry Authors
# SPDX-License-Identifier: Apache-2.0

apiVersion: 1

datasources:
  - name: Prometheus
    type: prometheus
    uid: prometheus
    access: proxy
    orgId: 1
    url: http://prometheus:9090
    basicAuth: false
    isDefault: false
    version: 1
    editable: false
    jsonData:
      httpMethod: GET
      exemplarTraceIdDestinations:
        - name: trace_id
          datasourceUid: tempo
          
  - name: Tempo
    type: tempo
    access: proxy
    orgId: 1
    url: http://tempo:3200
    basicAuth: false
    isDefault: true
    version: 1
    editable: false
    uid: tempo
    jsonData:
      httpMethod: GET
      serviceMap:
        datasourceUid: prometheus
      tracesToLogsV2:
        datasourceUid: loki
        spanStartTimeShift: '1h'
        spanEndTimeShift: '-1h'
        tags: [ 'job', 'instance', 'pod', 'namespace' ]
        filterByTraceID: false
        filterBySpanID: false
        customQuery: true
        query: 'method="${__span.tags.method}"'
      tracesToMetrics:
        datasourceUid: 'prometheus'
        spanStartTimeShift: '1h'
        spanEndTimeShift: '-1h'
        tags: [ { key: 'service.name', value: 'service' }, { key: 'job' } ]
        queries:
          - name: 'Sample query'
            query: 'sum(rate(traces_spanmetrics_latency_bucket{$__tags}[5m]))'
      nodeGraph:
        enabled: true
      search:
        hide: false
      lokiSearch:
        datasourceUid: 'loki'
      traceQuery:
        timeShiftEnabled: true
        spanStartTimeShift: '1h'
        spanEndTimeShift: '-1h'
      spanBar:
        type: 'Tag'
        tag: 'http.path'

  - name: Jaeger
    type: jaeger
    url: http://jaeger:16686
    access: proxy
    # UID should match the datasourceUid in derivedFields.
    uid: jaeger_uid
    readOnly: true
    isDefault: false
    jsonData:
      tracesToLogsV2:
        # Field with an internal link pointing to a logs data source in Grafana.
        # datasourceUid value must match the uid value of the logs data source.
        datasourceUid: 'loki'
        spanStartTimeShift: '1h'
        spanEndTimeShift: '-1h'
        tags: [ 'job', 'instance', 'pod', 'namespace' ]
        filterByTraceID: true
        filterBySpanID: true
        customQuery: true
        query: 'method="${__span.tags.method}"'
      tracesToMetrics:
        datasourceUid: 'prom'
        spanStartTimeShift: '1h'
        spanEndTimeShift: '-1h'
        tags: [ { key: 'service.name', value: 'service' }, { key: 'job' } ]
        queries:
          - name: 'Sample query'
            query: 'sum(rate(traces_spanmetrics_latency_bucket{$__tags}[5m]))'
      nodeGraph:
        enabled: true
      spanBar:
        type: 'None'

  
  - name: Zipkin
    type: zipkin
    url: http://zipkin:9411
    access: proxy
    # UID should match the datasourceUid in derivedFields.
    uid: zipkin_uid
    readOnly: false
    isDefault: false
    basicAuth: true
    basicAuthUser: 'admin'
    jsonData:
      tracesToLogsV2:
        # Field with an internal link pointing to a logs data source in Grafana.
        # datasourceUid value must match the uid value of the logs data source.
        datasourceUid: 'loki'
        spanStartTimeShift: '1h'
        spanEndTimeShift: '-1h'
        tags: [ 'job', 'instance', 'pod', 'namespace' ]
        filterByTraceID: true
        filterBySpanID: true
        customQuery: true
        query: 'method="${__span.tags.method}"'
      tracesToMetrics:
        datasourceUid: 'prom'
        spanStartTimeShift: '1h'
        spanEndTimeShift: '-1h'
        tags: [ { key: 'service.name', value: 'service' }, { key: 'job' } ]
        queries:
          - name: 'Sample query'
            query: 'sum(rate(traces_spanmetrics_latency_bucket{$__tags}[5m]))'
      nodeGraph:
        enabled: true
      spanBar:
        type: 'None'
      secureJsonData:
        basicAuthPassword: 'adminPassword'
      
  - name: Loki
    type: loki
    access: proxy
    orgId: 1
    url: http://loki:3100
    basicAuth: true
    basicAuthUser: 'admin'
    isDefault: false
    version: 1
    editable: false
    uid: loki
    jsonData:
      derivedFields:
        # Field with internal link pointing to data source in Grafana.
        - datasourceUid: zipkin_uid
          maxLines: 1000
          matcherRegex: "traceID=(\\w+)"
          name: TraceID
          url: '$${__value.raw}'          
          urlDisplayLabel: 'View Trace'
                    
        # Field with external link.
        - matcherRegex: "traceID=(\\w+)"
          name: TraceID
          url: 'http://zipkin:9411/trace/$${__value.raw}'
    secureJsonData:
      basicAuthPassword: 'adminPassword'