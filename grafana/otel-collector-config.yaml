receivers:
  otlp:
    protocols:
      grpc:
      http:
        cors:
            allowed_origins:
              - "http://*"
              - "https://*"
  loki:
    protocols:
      http:
    use_incoming_timestamp: true

  filelog:
    include: [/var/log/*.log]

  jaeger:
    protocols:
      grpc:
      thrift_binary:
      thrift_compact:
      thrift_http:
 
exporters:  
  # otlp:
  #   endpoint: "jaeger:4317"
  #   tls:
  #     insecure: true
  
  loki:
    endpoint: http://loki:3100/loki/api/v1/push

  jaeger:
    endpoint: "jaeger:14250"
    tls:
      insecure: true

  prometheus:
    endpoint: "otelcol:8889"
    resource_to_telemetry_conversion:
      enabled: true
    enable_open_metrics: true

  logging:
    verbosity: detailed

processors:
  batch:
  filter:
    metrics:
      exclude:
        match_type: strict
        metric_names:
          - queueSize
  attributes: # Send logs with container label to Loki
    actions:
      - action: insert
        key: loki.attribute.labels
        value: container
      - action: insert
        key: loki.format
        value: raw
      - action: insert
        key: loki.attribute.labels
        value: log.file.name

extensions:
  health_check:
  pprof:
    endpoint: :1888
  zpages:
    endpoint: :55679

service:
  extensions: [pprof, zpages, health_check]
  pipelines:
    traces:
      receivers: [otlp]
      processors: [batch]
      exporters: [logging, jaeger]
    metrics:
      receivers: [otlp]
      processors: [filter, batch]
      exporters: [prometheus, logging]
    logs:
      receivers: [otlp, loki, filelog]
      processors: [batch, attributes]
      exporters: [logging, loki]