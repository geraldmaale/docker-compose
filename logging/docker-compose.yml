services: 
  # Seq for logging
  seq:
    image: datalust/seq
    container_name: seq
    restart: unless-stopped
    environment:
      - ACCEPT_EULA=Y
    ports:
      - "5341:80"
    volumes:
      - seq_data:/data

  es01:
    image: elasticsearch:7.13.4
    container_name: es01
    restart: always    
    environment:
      - node.name=es01
      - ES_JAVA_OPTS=-"Xms512m -Xmx512m"
      - boostrap.memory_lock=true
    volumes:
      - data01:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    networks:
      - elastic

  # es01:
  #   image: docker.elastic.co/elasticsearch/elasticsearch:8.1.2
  #   container_name: es01
  #   restart: always    
  #   environment:
  #     node.name: es01
  #     cluster.name: es-docker-cluster
  #     discovery.seed_hosts: es02
  #     cluster.initial_master_nodes: es01,es02
  #     # discovery.type: single-node
  #     bootstrap.memory_lock: "true"
  #     vm.max_map_count: 262144
  #     ES_JAVA_OPTS: "-Xms512m -Xmx512m"
  #   ulimits:
  #     memlock:
  #       soft: -1
  #       hard: -1
  #   volumes:
  #     - data01:/usr/share/elasticsearch/data
  #   ports:
  #     - 9200:9200
  #   networks:
  #     - elastic

  # es02:
  #   image: docker.elastic.co/elasticsearch/elasticsearch:8.1.2
  #   container_name: es02
  #   restart: always    
  #   environment:
  #     node.name: es02
  #     cluster.name: es-docker-cluster
  #     discovery.seed_hosts: es01
  #     cluster.initial_master_nodes: es01,es02
  #     # discovery.type: single-node
  #     bootstrap.memory_lock: "true"
  #     vm.max_map_count: 262144
  #     ES_JAVA_OPTS: "-Xms512m -Xmx512m"
  #   ulimits:
  #     memlock:
  #       soft: -1
  #       hard: -1
  #   volumes:
  #     - data02:/usr/share/elasticsearch/data
  #   networks:
  #     - elastic

  kibana:
    image: kibana:7.13.4
    container_name: kib01
    restart: always
    ports:
      - 5601:5601
    environment:
      ELASTICSEARCH_URL: http://es01:9200
      ELASTICSEARCH_HOSTS: http://es01:9200
    networks:
      - elastic

volumes:
  seq_data:
  data01:
    driver: local
  # data01:
  #   driver: local
  # data02:
  #   driver: local

networks:
  elastic:
    driver: bridge